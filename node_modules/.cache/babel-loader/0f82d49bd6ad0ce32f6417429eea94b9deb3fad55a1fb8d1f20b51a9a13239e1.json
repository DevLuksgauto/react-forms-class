{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmail();\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"N/gy9exlzawUfXJbUo+845nWhTw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lucas/Desktop/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] =useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\nconst nameInputChangeHandler = (event) => {\n  setEnteredName(event.target.value)\n};\n\nconst emailInputChangeHandler = (event) => {\n  setEnteredEmail(event.target.value)\n}\n\nconst nameInputBlurHandler = (event) => {\n  setEnteredNameTouched(true);\n};\n\nconst emailInputBlurHandler = (event) => {\n  setEnteredEmail()\n};\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n\n    setEnteredName('');\n    setEnteredNameTouched(false)\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n  ? 'form-control invalid'\n  : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n            type='text'\n            id='name'\n            onChange={nameInputChangeHandler}\n            onBlur={nameInputBlurHandler}\n            value={enteredName}\n          />\n          {nameInputIsInvalid && (\n            <p className=\"error-text\">Name must not be empty.</p>\n          )}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n            type='text'\n            id='email'\n            onChange={emailInputChangeHandler}\n            onBlur={nameInputBlurHandler}\n            value={enteredEmail}\n          />\n          {/* {nameInputIsInvalid && (\n            <p className=\"error-text\">Name must not be empty.</p>\n          )} */}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}